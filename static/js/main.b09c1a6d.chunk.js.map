{"version":3,"sources":["components/LayoutHeader/LayoutHeader.module.css","pages/BoxesPage/BoxesPage.module.css","components/Layout/Layout.module.css","pages/PokedexPage/PokedexPage.module.css","components/LayoutHeader/box-icon.svg","components/LayoutHeader/LayoutHeader.js","components/Layout/Layout.js","components/Image.js","app/api.js","hooks/usePokemonList.js","pages/PokedexPage/PokedexPage.js","pages/BoxesPage/BoxesPage.js","app/utils.js","components/App/App.js","features/counter/counterSlice.js","app/store.js","app/serviceWorker.js","index.js"],"names":["module","exports","LayoutHeader","props","className","styles","layoutHeader","layoutHeaderTop","to","layoutHeaderTitle","alt","src","imgSrc","title","layoutHeaderRightMenu","activeClassName","active","isActive","match","location","pathname","href","target","rel","layoutHeaderBottom","layoutHeaderSubMenuTitle","subtitle","Layout","layout","layoutBody","layoutBodyInner","children","BaseHomeRenderPath","Image","process","PokeApiDefaultBaseUrl","PokeApi","generation","baseUrl","this","value","resource","a","fetch","then","res","json","_getJson","slug","withLearnset","pkm","entry","Promise","all","getLearnset","resolutions","learnset","name","getMoves","entries","getItems","getAbilities","usePokemonList","options","useState","pokemonList","setPokemonList","getPokemonListAsyncCallback","useCallback","api","shouldSkip","search","length","reg","RegExp","onlyHomeStorable","isHomeStorable","isGmax","showForms","isForm","showCosmeticForms","isCosmetic","Math","min","max","parseInt","gen","getPokemonList","apiResponse","pokedex","idx","push","id","dexNum","num","tabIndex","file","imgHome","response","getPokemonListAsync","useEffect","PokedexPage","query","URLSearchParams","useLocation","opts","get","has","pokemonListContainers","pokedexListItem","pokedexList","createBoxes","boxes","Map","forEach","i","pos","sequentialIndex","gridRows","gridColumns","grid","col","row","debug","box","CalcBoxPosition","set","boxElements","boxIndex","boxPokemon","rowIndex","colIndex","createPokemonElement","BoxesPage","App","basename","path","counterSlice","createSlice","initialState","reducers","increment","state","decrement","incrementByAmount","action","payload","actions","configureStore","reducer","counter","counterReducer","Boolean","window","hostname","ReactDOM","render","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b09c1a6d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"layoutHeader\":\"LayoutHeader_layoutHeader__3X1tP\",\"layoutHeaderTop\":\"LayoutHeader_layoutHeaderTop__3ygrb\",\"layoutHeaderTitle\":\"LayoutHeader_layoutHeaderTitle__10aII\",\"layoutHeaderRightMenu\":\"LayoutHeader_layoutHeaderRightMenu__2aQbs\",\"active\":\"LayoutHeader_active__2A29m\",\"layoutHeaderBottom\":\"LayoutHeader_layoutHeaderBottom__1VMWe\",\"layoutHeaderSubMenuTitle\":\"LayoutHeader_layoutHeaderSubMenuTitle__X6vnu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box-group\":\"BoxesPage_box-group__2qvAr\",\"box-group-content\":\"BoxesPage_box-group-content__cmXdh\",\"box\":\"BoxesPage_box__3SWQq\",\"box-header\":\"BoxesPage_box-header__3Ultd\",\"box-title\":\"BoxesPage_box-title__3ji1O\",\"box-grid\":\"BoxesPage_box-grid__LBmRE\",\"box-cell\":\"BoxesPage_box-cell__KpmHB\",\"box-img\":\"BoxesPage_box-img__MykXM\",\"has-gmax\":\"BoxesPage_has-gmax__1Cq7o\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"Layout_layout__3PvPc\",\"layoutBody\":\"Layout_layoutBody__aAcW8\",\"layoutBodyInner\":\"Layout_layoutBodyInner__2lEVU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pokedexList\":\"PokedexPage_pokedexList__3jQ9k\",\"pokedexListItem\":\"PokedexPage_pokedexListItem__3MDzB\"};","export default __webpack_public_path__ + \"static/media/box-icon.c2afa28f.svg\";","import React from \"react\"\nimport styles from \"./LayoutHeader.module.css\"\nimport imgSrc from \"./box-icon.svg\"\nimport PropTypes from \"prop-types\"\nimport { Link, NavLink } from \"react-router-dom\"\n\nfunction LayoutHeader(props) {\n  const checkActive = (match, location) => {\n    //some additional logic to verify you are in the home URI\n    if (!location) {\n      return false\n    }\n    const { pathname } = location\n    return pathname === \"/\"\n  }\n\n  return (\n    <div className={styles.layoutHeader}>\n      <div className={styles.layoutHeaderTop + \" bgGradientLeft\"}>\n        <Link to=\"/\" className={styles.layoutHeaderTitle}>\n          <img alt={\"icon\"} src={imgSrc} />\n          <h1>{props.title}</h1>\n        </Link>\n        <div className={styles.layoutHeaderRightMenu}>\n          <nav>\n            <NavLink to=\"/\"\n                     activeClassName={styles.active}\n                     isActive={checkActive}><i className=\"icon-box-add\"/> Boxes</NavLink>\n            <NavLink to=\"/pokedex\"\n                     activeClassName={styles.active}><i className=\"icon-books\"/> Pokédex</NavLink>\n            <a href=\"https://github.com/itsjavi/livingdex\" target=\"_blank\" rel=\"noreferrer\">\n              <i className=\"icon-github\" title=\"Github\"/> Github\n            </a>\n            <a href=\"https://blog.itsjavi.com/\" target=\"_blank\" rel=\"noreferrer\">\n              <small>Created by <b>@itsjavi</b></small>\n            </a>\n          </nav>\n        </div>\n      </div>\n      <div className={styles.layoutHeaderBottom + \" bgGradientDownLight\"}>\n        <div className={styles.layoutHeaderSubMenuTitle}>\n          {props.subtitle}\n        </div>\n      </div>\n    </div>\n  )\n}\n\nLayoutHeader.propTypes = {\n  title: PropTypes.any.isRequired,\n  subtitle: PropTypes.any,\n}\n\nexport { LayoutHeader }\n","import React from \"react\"\nimport styles from \"./Layout.module.css\"\nimport { LayoutHeader } from \"../LayoutHeader/LayoutHeader\"\n//import { LayoutFooter } from \"../LayoutFooter/LayoutFooter\"\nimport PropTypes from \"prop-types\"\n\nfunction Layout(props) {\n  return (\n    <div className={styles.layout}>\n      <LayoutHeader title={props.title} subtitle={props.subtitle} />\n      <div className={styles.layoutBody}>\n        <div className={styles.layoutBodyInner}>\n          {props.children}\n        </div>\n      </div>\n      {/*<LayoutFooter actions={props.footerActions}>*/}\n      {/*  {props.footer}*/}\n      {/*</LayoutFooter>*/}\n    </div>\n  )\n}\n\nLayout.propTypes = {\n  title: PropTypes.any.isRequired,\n  subtitle: PropTypes.any,\n  footer: PropTypes.any,\n  footerActions: PropTypes.any,\n}\n\nexport { Layout }\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nconst BaseHomeRenderPath = \"./assets/images/home/pokemon/regular/\"\n\nfunction Image(props) {\n  return (\n    <img className={props.className} src={process.env.PUBLIC_URL + \"/\" + props.src} alt={props.alt} />\n  )\n}\n\nImage.propTypes = {\n  src: PropTypes.string.isRequired,\n  alt: PropTypes.string,\n  className: PropTypes.string,\n}\n\nexport default Image\nexport { Image, BaseHomeRenderPath }\n","const PokeApiDefaultBaseUrl = process.env.PUBLIC_URL + \"/assets/data/json\"\nconst PokeApiMaxGen = 8\n\nclass PokeApi {\n  #baseUrl\n  #generation\n\n  constructor(generation = PokeApiMaxGen, baseUrl = PokeApiDefaultBaseUrl) {\n    this.#generation = generation\n    this.#baseUrl = baseUrl\n  }\n\n  get generation() {\n    return this.#generation\n  }\n\n  set generation(value) {\n    this.#generation = value\n  }\n\n  get baseUrl() {\n    return this.#baseUrl\n  }\n\n  set baseUrl(value) {\n    this.#baseUrl = value\n  }\n\n  /**\n   * @param {string} resource\n   * @returns {Promise<any>}\n   */\n  async _getJson(resource) {\n    return fetch(this.#baseUrl + \"/\" + resource + \".json\").then((res) =>\n      res.json(),\n    )\n  }\n\n  /**\n   * @returns {Promise<PokemonListItem[]>}\n   */\n  async getPokemonList() {\n    return this._getJson(`gen/${this.generation}/livingdex-pokemon`)\n  }\n\n  async getPokemon(slug, withLearnset = false) {\n    let pkm = this._getJson(`gen/${this.generation}/pokemon/${slug}`)\n\n    if (withLearnset) {\n      pkm\n        .then((entry) => {\n          return Promise.all([entry, this.getLearnset(slug)])\n        })\n        .then((resolutions) => {\n          let entry = resolutions[0]\n          entry.learnset = resolutions[1]\n        })\n    }\n\n    return pkm\n  }\n\n  /**\n   * @param {string} slug\n   * @returns {Promise<any>}\n   */\n  async getLearnset(slug) {\n    return this._getJson(`gen/${this.generation}/learnsets/${slug}`)\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getMoves() {\n    return this._getJson(`gen/${this.generation}/moves`)\n  }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<any>}\n   */\n  async getMove(name) {\n    return this.getMoves().then((entries) => entries[name])\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getItems() {\n    return this._getJson(`gen/${this.generation}/items`)\n  }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<any>}\n   */\n  async getItem(name) {\n    return this.getItems().then((entries) => entries[name])\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getAbilities() {\n    return this._getJson(`gen/${this.generation}/abilities`)\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getGames() {\n    return this._getJson(`games`)\n  }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<any>}\n   */\n  async getAbility(name) {\n    return this.getAbilities().then((entries) => entries[name])\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getTypes() {\n    return this._getJson(\"types\")\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getEggGroups() {\n    return this._getJson(\"egg-groups\")\n  }\n\n  /**\n   * @returns {Promise<any>}\n   */\n  async getNatures() {\n    return this._getJson(\"natures\")\n  }\n}\n\nexport default PokeApi\nexport { PokeApi, PokeApiMaxGen }\n","import {useCallback, useEffect, useState} from \"react\"\nimport {PokeApi, PokeApiMaxGen} from \"../app/api\"\n\n/**\n * @param {PokemonListOptions} options\n * @return {PokemonListItemSimple[]}\n */\nfunction usePokemonList(options) {\n    const [pokemonList, setPokemonList] = useState([])\n\n    const getPokemonListAsyncCallback = useCallback(() => {\n        const api = new PokeApi()\n\n        api.generation = Math.min(\n            PokeApiMaxGen,\n            Math.max(1, parseInt(options.gen + \"\")) || PokeApiMaxGen,\n        )\n\n        function shouldSkip(pkm) {\n            if (options.search !== null && options.search.length > 2) {\n                let reg = new RegExp(options.search, \"gi\")\n                if (!pkm.name.match(reg) && !pkm.slug.match(reg)) {\n                    return true\n                }\n            }\n            if (options.onlyHomeStorable && !pkm.isHomeStorable) {\n                return true\n            }\n            if (options.onlyHomeStorable && pkm.isGmax) {\n                return true\n            }\n            if ((!options.showForms) && pkm.isForm) {\n                return true\n            }\n            if ((!options.showCosmeticForms) && pkm.isCosmetic) {\n                return true\n            }\n            return false\n        }\n\n        const getPokemonListAsync = async () => {\n            const response = await api.getPokemonList()\n                .then(function (apiResponse) {\n                    let pokedex = []\n                    let idx = 0\n                    for (let slug in apiResponse) {\n                        let pkm = apiResponse[slug]\n                        if (shouldSkip(pkm)) {\n                            continue\n                        }\n                        idx++\n                        pokedex.push({\n                            id: pkm.id,\n                            dexNum: pkm.num,\n                            tabIndex: idx,\n                            file: pkm.imgHome + \".png\",\n                            slug: pkm.slug,\n                            name: pkm.title,\n                        })\n                    }\n                    return pokedex\n                })\n            setPokemonList(response)\n        }\n        getPokemonListAsync()\n    }, [options])\n\n    useEffect(() => {\n        getPokemonListAsyncCallback()\n    }, [getPokemonListAsyncCallback])\n\n    return pokemonList\n}\n\nexport default usePokemonList","import { Layout } from \"../../components/Layout/Layout\"\nimport styles from \"./PokedexPage.module.css\"\nimport { BaseHomeRenderPath, Image } from \"../../components/Image\"\nimport React from \"react\"\nimport usePokemonList from \"../../hooks/usePokemonList\"\nimport { useLocation } from \"react-router-dom\"\n\nfunction PokedexPage() {\n  let query = new URLSearchParams(useLocation().search)\n  let opts = {\n    \"gen\": query.get(\"gen\"),\n    \"search\": query.get(\"q\"),\n    \"showForms\": false,\n    \"showCosmeticForms\": false,\n    \"onlyHomeStorable\": true,\n  }\n  if (query.has(\"all\")) {\n    opts.showForms = true\n    opts.showCosmeticForms = true\n    opts.onlyHomeStorable = true\n  }\n\n  const pokemonList = usePokemonList(opts)\n\n  let title = <span>Living Dex / <b>Pokédex</b></span>\n  let subtitle = \"National Pokédex (\" + pokemonList.length + \" Pokémon)\"\n\n  let pokemonListContainers = []\n\n  for (const pkm of pokemonList) {\n    pokemonListContainers.push(\n      <div title={pkm.name}\n           tabIndex={pkm.num}\n           key={pkm.num}\n           className={styles.pokedexListItem}>\n        <Image src={BaseHomeRenderPath + pkm.file} alt={pkm.name} />\n      </div>,\n    )\n  }\n\n  // let footer = <Panel header={\"Panel Header\"}>\n  //   Panel Body\n  // </Panel>\n  // let footerActions = <div>\n  //   <Button icon={\"Y\"} type={\"shoulderLeft\"}>Help</Button>\n  //   <Button icon={\"B\"}>Back</Button>\n  // </div>\n\n  return (\n    <div className=\"app themePurple bgGradientDown\">\n      <Layout title={title} subtitle={subtitle}>\n        <div className={styles.pokedexList}>\n          {pokemonListContainers}\n        </div>\n      </Layout>\n    </div>\n  )\n}\n\nPokedexPage.propTypes = {}\n\nexport default PokedexPage\n","import { Layout } from \"../../components/Layout/Layout\"\nimport styles from \"./BoxesPage.module.css\"\nimport { BaseHomeRenderPath, Image } from \"../../components/Image\"\nimport React from \"react\"\nimport { CalcBoxPosition } from \"../../app/utils\"\nimport usePokemonList from \"../../hooks/usePokemonList\"\nimport { useLocation } from \"react-router-dom\"\n\n/**\n * @param {PokemonListItemSimple} pkm\n */\nfunction createPokemonElement(pkm) {\n  return <div title={pkm.name}\n              tabIndex={pkm.tabIndex}\n              key={pkm.id}\n              className={styles[\"box-cell\"]}>\n    <figure>\n      <Image className={styles[\"box-img\"]}\n             src={BaseHomeRenderPath + pkm.file}\n             alt={pkm.name} />\n      <figcaption>{pkm.name}</figcaption>\n    </figure>\n  </div>\n}\n\n/**\n * @param {PokemonListItemSimple[]} pokemonList\n */\nfunction createBoxes(pokemonList) {\n  let boxes = new Map()\n\n  // First, distribute Pokemon list in boxes, rows and cols\n  pokemonList.forEach((pkm, i) => {\n    let pos = CalcBoxPosition(i, 5, 6)\n    if (!boxes.has(pos.box)) {\n      boxes.set(pos.box, new Map())\n    }\n    let box = boxes.get(pos.box)\n    if (!box.has(pos.row)) {\n      box.set(pos.row, new Map())\n    }\n    let row = box.get(pos.row)\n    row.set(pos.col, pkm)\n  })\n\n  // Second, iterate all boxes, rows and cols to render elements\n  let boxElements = []\n  boxes.forEach((box, boxIndex) => {\n    let boxPokemon = []\n    box.forEach((row, rowIndex) => {\n      row.forEach((pkm, colIndex) => {\n        boxPokemon.push(createPokemonElement(pkm))\n      })\n    })\n    boxElements.push(<div key={boxIndex} className={styles[\"box\"]}>\n      <div className={styles[\"box-header\"]}>\n        <div className={styles[\"box-title\"]}>{\"Box \" + (boxIndex + 1)}</div>\n      </div>\n      <div className={styles[\"box-grid\"]}>{boxPokemon}</div>\n    </div>)\n  })\n\n  return boxElements\n}\n\nfunction BoxesPage() {\n  let query = new URLSearchParams(useLocation().search)\n\n  let opts = {\n    \"gen\": query.get(\"gen\"),\n    \"search\": query.get(\"q\"),\n    \"separateBoxPikachu\": query.has(\"sep-pika\"),\n    \"separateBoxForms\": query.has(\"sep-forms\"),\n    \"showForms\": true,\n    \"showCosmeticForms\": true,\n    \"onlyHomeStorable\": true,\n  }\n  if (query.has(\"noforms\")) {\n    opts.showForms = false\n  }\n  if (query.has(\"nocosmetic\")) {\n    opts.showCosmeticForms = false\n  }\n\n  const pokemonList = usePokemonList(opts)\n  let boxes = createBoxes(pokemonList)\n  let title = <span>Living Dex / <b>Boxes</b></span>\n  let subtitle = \"Box Organization (\" + pokemonList.length + \" Storable Pokémon)\"\n\n  return (\n    <div className=\"app themeTeal bgGradientDown\">\n      <Layout title={title} subtitle={subtitle}>\n        <div className={styles[\"box-group\"]}>\n          <div className={styles[\"box-group-content\"]}>\n            {boxes}\n          </div>\n        </div>\n      </Layout>\n    </div>\n  )\n}\n\nBoxesPage.propTypes = {}\n\nexport default BoxesPage\n","function UpperCaseFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1)\n}\n\nfunction CalcRangeFolder(num, zeroPadding = 4, itemsPerFolder = 100) {\n  num = parseInt(num)\n  let minFolder = null\n  let maxFolder = null\n\n  for (let i = 0; i < num + (itemsPerFolder * 2); i += itemsPerFolder) {\n    if ((i + itemsPerFolder) >= num) {\n      minFolder = (i + 1)\n      maxFolder = i + itemsPerFolder\n      break\n    }\n  }\n\n  return String(minFolder).padStart(4, \"0\") + \"-\" + String(maxFolder).padStart(4, \"0\")\n}\n\n/**\n * Given the sequential index of the element in a flattened list,\n * calculates the position of the element in a list of grids, given each grid dimensions.\n *\n * @param {number} sequentialIndex\n * @param {number} gridRows\n * @param {number} gridColumns\n * @return {BoxPosition}\n */\nfunction CalcBoxPosition(sequentialIndex, gridRows = 5, gridColumns = 6) {\n  let i = -1\n  let grid = 0\n  let col = 0\n  let row = 0\n  let debug = \"\\n\"\n\n  while (i < sequentialIndex) {\n    // new line\n    if ((col + 1) > gridColumns) {\n      col = 0\n      row++\n      debug += \"\\n\"\n    } else {\n      i++\n      if (i === sequentialIndex) {\n        debug += \" * \\n\\n\"\n        break\n      }\n      debug += \" - \"\n      col++\n    }\n\n    // new box\n    if ((row + 1) > gridRows) {\n      grid++\n      row = 0\n      col = 0\n      debug += \"\\n\\n\"\n    }\n  }\n\n  return {\n    box: grid,\n    row: row,\n    col: col,\n    debug: debug,\n  }\n}\n\nexport { UpperCaseFirst, CalcRangeFolder, CalcBoxPosition }\n","import \"./App.css\"\r\nimport PokedexPage from \"../../pages/PokedexPage/PokedexPage\"\r\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\"\r\nimport BoxesPage from \"../../pages/BoxesPage/BoxesPage\"\r\n\r\nfunction App() {\r\n\r\n  return (\r\n    <Router basename=\"/\">\r\n      <Switch>\r\n        <Route path=\"/pokedex\">\r\n          <PokedexPage />\r\n        </Route>\r\n        <Route path=\"/\">\r\n          <BoxesPage />\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  )\r\n}\r\n\r\nApp.propTypes = {}\r\n\r\nexport default App\r\n","import { createSlice } from '@reduxjs/toolkit';\r\n\r\nexport const counterSlice = createSlice({\r\n  name: 'counter',\r\n  initialState: {\r\n    value: 0,\r\n  },\r\n  reducers: {\r\n    increment: state => {\r\n      // Redux Toolkit allows us to write \"mutating\" logic in reducers. It\r\n      // doesn't actually mutate the state because it uses the Immer library,\r\n      // which detects changes to a \"draft state\" and produces a brand new\r\n      // immutable state based off those changes\r\n      state.value += 1;\r\n    },\r\n    decrement: state => {\r\n      state.value -= 1;\r\n    },\r\n    incrementByAmount: (state, action) => {\r\n      state.value += action.payload;\r\n    },\r\n  },\r\n});\r\n\r\nexport const { increment, decrement, incrementByAmount } = counterSlice.actions;\r\n\r\n// The function below is called a thunk and allows us to perform async logic. It\r\n// can be dispatched like a regular action: `dispatch(incrementAsync(10))`. This\r\n// will call the thunk with the `dispatch` function as the first argument. Async\r\n// code can then be executed and other actions can be dispatched\r\nexport const incrementAsync = amount => dispatch => {\r\n  setTimeout(() => {\r\n    dispatch(incrementByAmount(amount));\r\n  }, 1000);\r\n};\r\n\r\n// The function below is called a selector and allows us to select a value from\r\n// the state. Selectors can also be defined inline where they're used instead of\r\n// in the slice file. For example: `useSelector((state) => state.counter.value)`\r\nexport const selectCount = state => state.counter.value;\r\n\r\nexport default counterSlice.reducer;\r\n","import {configureStore} from '@reduxjs/toolkit';\r\nimport counterReducer from '../features/counter/counterSlice';\r\n\r\n//// in the store we will have what the user can change\r\n// const exampleStore = {\r\n//     last_visited: {\r\n//         pokedex_entry:  null,\r\n//         team: null,\r\n//         // etc.\r\n//     },\r\n//     options: {\r\n//         sort_by: \"NATIONAL_DEX|ALPHABETICAL|EVOLUTION_FORM\",\r\n//         sort_order: \"ASC|DESC\",\r\n//         include_female_forms: true,\r\n//         include_cosmetic_forms: true,\r\n//         include_special_ability_forms: true,\r\n//         include_shiny: true,\r\n//         // ... etc\r\n//     },\r\n//     home_storage: [ // list of all the HOME-storable forms\r\n//         // tracker for: captured/not-captured, marks, pokeballs, origin game, moves, nature, ability, evs, etc.\r\n//         // JUST HOLDS metadata and poke identifiers, the static pokemon data is loaded from JSON files/API\r\n//     ],\r\n//     go_storage: [], // list of all GO-storable pokes, with user-metadata. // JUST HOLDS metadata and poke identifiers\r\n//     teams: [ // l\r\n//         {\r\n//             // koffing JSON\r\n//         }\r\n//     ],\r\n//     rulesets: {\r\n//         \"swsh-season10\": {}\r\n//     }\r\n// }\r\n\r\nexport default configureStore({\r\n    reducer: {\r\n        counter: counterReducer,\r\n    },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport \"./index.css\"\r\nimport App from \"./components/App/App\"\r\nimport store from \"./app/store\"\r\nimport {Provider} from \"react-redux\"\r\nimport * as serviceWorker from \"./app/serviceWorker\"\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <Provider store={store}>\r\n            <App/>\r\n        </Provider>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\"),\r\n)\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}